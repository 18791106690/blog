<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="57416555-66d7-496a-85aa-23850a801cab" name="Default Changelist" comment="image test">
      <change afterPath="$PROJECT_DIR$/context/rootfs/scripts/docker.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/context/rootfs/scripts/nvidia-docker.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/context/rootfs/scripts/uninstall-docker.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/context/rootfs/scripts/utils.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/context/rootfs/scripts/clean-kube.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/context/rootfs/scripts/init-kube.sh" beforeDir="false" afterPath="$PROJECT_DIR$/context/rootfs/scripts/init-kube.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/context/rootfs/scripts/init-registry.sh" beforeDir="false" afterPath="$PROJECT_DIR$/context/rootfs/scripts/init-registry.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/context/rootfs/scripts/init.sh" beforeDir="false" afterPath="$PROJECT_DIR$/context/rootfs/scripts/init.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/context/rootfs/scripts/install-cri.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/context/rootfs/scripts/kubelet-pre-start.sh" beforeDir="false" afterPath="$PROJECT_DIR$/context/rootfs/scripts/kubelet-pre-start.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/context1/Kubefile" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/context1/amd64/etc/Metadata" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/context1/arm64/etc/Metadata" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/context1/containerd/rootfs/etc/dump-config.toml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/context1/containerd/rootfs/scripts/clean.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/context1/docker/rootfs/etc/daemon.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/context1/docker/rootfs/etc/docker.service" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/context1/docker/rootfs/scripts/clean.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/context1/download.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/context1/imageList" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/context1/rootfs/etc/10-kubeadm.conf" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/context1/rootfs/etc/kubeadm.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/context1/rootfs/etc/kubelet.service" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/context1/rootfs/etc/registry.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/context1/rootfs/lib/install_libseccomp.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/context1/rootfs/scripts/docker.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/context1/rootfs/scripts/init-kube.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/context1/rootfs/scripts/init-registry.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/context1/rootfs/scripts/kubelet-pre-start.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/context1/rootfs/scripts/nvidia-docker.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/context1/rootfs/scripts/uninstall-docker.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/context1/rootfs/scripts/utils.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/context1/rootfs/statics/audit-policy.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/context1/version.sh" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/context/rootfs/scripts/docker.sh" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/context/rootfs/etc/kubeadm.yml" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/context/rootfs/scripts/nvidia-docker.sh" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/context/rootfs/scripts/kubelet-pre-start.sh" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/context/rootfs/lib/install_libseccomp.sh" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/context/rootfs/scripts/init.sh" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/context/rootfs/scripts/init-kube.sh" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/context/rootfs/scripts/uninstall-docker.sh" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/context/rootfs/scripts/utils.sh" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/context/rootfs/scripts/init-registry.sh" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="ProjectId" id="2G1al10Kk3V9NmFQAevB3WwLaQv" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.tried.to.enable.integration.vgo.integrator" value="true" />
    <property name="go.vendoring.notification.had.been.shown" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="image test" />
    <option name="LAST_COMMIT_MESSAGE" value="image test" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
</project>