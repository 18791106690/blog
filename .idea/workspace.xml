<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="171452f3-80c1-464e-8b90-19b58582ff4d" name="Default Changelist" comment="测试e2e mount测试">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/context/rootfs/etc/registry.yml" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/context-main/rootfs/etc/registry_config.yml" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/auto-main.sh" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/context-main/docker/rootfs/etc/daemon.json" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/context/docker/rootfs/etc/daemon.json" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/context-main/docker/rootfs/scripts/docker.sh" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="ProjectId" id="2JWONIBKcSGxCQmS1zr9gEkWcEw" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.tried.to.enable.integration.vgo.integrator" value="true" />
    <property name="go.vendoring.notification.had.been.shown" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/.github/workflows" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/.github/workflows" />
      <recent name="$PROJECT_DIR$/test/suites" />
      <recent name="$PROJECT_DIR$/test" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/context-ackd/arm64" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/context-main" />
      <recent name="$PROJECT_DIR$/.github/workflows" />
      <recent name="$PROJECT_DIR$/context-main/amd64" />
      <recent name="$PROJECT_DIR$/context-ackd/rootfs/cri" />
    </key>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="add auto-build-main" />
    <MESSAGE value="add amd64 and arm64 文件夹" />
    <MESSAGE value="ackd自动化构建脚本" />
    <MESSAGE value="添加docker的tar包，支持自动化构建cri" />
    <MESSAGE value="支持calico以app的形式注入集群" />
    <MESSAGE value="支持一键构建main分支原生docker镜像&#10;支持一键构建main分支hack docker镜像&#10;修改脚本中的bug" />
    <MESSAGE value="删除没用的文件，保留自动化构建脚本" />
    <MESSAGE value="add arm自动化构建" />
    <MESSAGE value="支持自动化构建脚本-sealer-v0.9.1版本" />
    <MESSAGE value="修改sealer version 构建官方docker镜像" />
    <MESSAGE value="删除calico" />
    <MESSAGE value="修改自动化构建脚本" />
    <MESSAGE value="测试e2e mount测试" />
    <option name="LAST_COMMIT_MESSAGE" value="测试e2e mount测试" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
</project>