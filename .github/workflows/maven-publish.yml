# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path
name: Auto build image
on: #[push, pull_request]
  issue_comment:
    types:
      - created
jobs:
  issue_comment:
    name: Auto build image
    if: startswith(github.event.comment.body, '/imagebuild')
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:

      - name: Check outputs
        run: |
          commentbody="${{github.event.comment.body}}"
          version=`echo "$commentbody"|cut -d" " -f2`
          echo $version
          arch=`echo "$commentbody"|cut -d" " -f3`
          echo $arch
          wget http://sealer.oss-cn-beijing.aliyuncs.com/auto-build/rootfs.tar.gz
          tar -xvf rootfs.tar.gz
          sudo chmod -R 777 ./rootfs/
          wget -P ./rootfs/bin/ https://storage.googleapis.com/kubernetes-release/release/$version/bin/linux/$arch/{kubectl,kubelet,kubeadm}
          sudo chmod 777 ./rootfs/bin/kubectl ./rootfs/bin/kubelet ./rootfs/bin/kubeadm
          wget https://storage.googleapis.com/kubernetes-release/release/$version/bin/linux/amd64/kubeadm
          sudo chmod 777 kubeadm
          wget http://sealer.oss-cn-beijing.aliyuncs.com/auto-build/sealer.tar.gz
          sudo tar -xvf sealer.tar.gz -C /usr/bin
          ls -R
          sudo sealer login ${{secrets.PRIVATEWAREHOUSE}}
          sudo sed -i "s/v1.20.14/$version/g" ./rootfs/etc/kubeadm.yml
          sudo sed -i "s/v1.20.14/$version/g" ./rootfs/Metadata
          sudo sed -i "s/amd64/$arch/g" ./rootfs/Metadata
          sudo ./kubernetes/server/bin/kubeadm config images list --config ./rootfs/etc/kubeadm.yml 2>/dev/null>>./rootfs/imageList
          cd ./rootfs
          sudo sealer build -f Kubefile -m lite -t test:0.1 .
          sudo sealer push test:0.1
      - name: Auto build image
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            kubernetes:success
