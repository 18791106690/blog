# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path
name: Auto build image
on: #[push, pull_request]
  issue_comment:
    types:
      - created
jobs:
  issue_comment:
    name: Auto build image
    if: ${{ github.event.comment.body == '/buildv1.19.8' }}
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:

      - name: Check outputs
        run: |
          BUILD=${{github.event.comment.body}}
          echo ${BUILD#*d} 
          wget http://sealer.oss-cn-beijing.aliyuncs.com/auto-build/k8sv1.20.14.tar.gz
          tar -xvf k8sv1.20.14.tar.gz
          wget https://dl.k8s.io/${BUILD#*d}/kubernetes-server-linux-amd64.tar.gz
          tar -xvf kubernetes-server-linux-amd64.tar.gz
          sudo cp ./kubernetes/server/bin/kubectl ./rootfs/bin/
          sudo cp ./kubernetes/server/bin/kubeadm ./rootfs/bin/
          sudo cp ./kubernetes/server/bin/kubelet ./rootfs/bin/
          wget http://sealer.oss-cn-beijing.aliyuncs.com/auto-build/sealer.tar.gz
          sudo tar -xvf sealer.tar.gz -C /usr/bin
          sudo sealer login ${{secrets.PRIVATEWAREHOUSE}}
          cd ./rootfs
          cat>imageList<<EOF
          k8s.gcr.io/kube-apiserver:v1.20.14
          k8s.gcr.io/kube-controller-manager:v1.20.14
          k8s.gcr.io/kube-scheduler:v1.20.14
          k8s.gcr.io/kube-proxy:v1.20.14
          k8s.gcr.io/pause:3.2
          k8s.gcr.io/etcd:3.4.13-0
          k8s.gcr.io/coredns:1.7.0
          EOF
          sed -i 's/v1.20.14/v1.19.8/g' ./etc/kubeadm.yml
          sudo sealer build -f Kubefile -m lite -t test:0.2 .
          sudo sealer push test:0.2
      - name: Auto build image
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            kubernetes:${BUILD#*d}
