# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path
name: Auto build image
on: #[push, pull_request]
  issue_comment:
    types:
      - created
jobs:
  issue_comment:
    name: Auto build image
    if: startswith(github.event.comment.body, '/imagebuild')
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:

      - name: Check outputs
        run: |
          commentbody="${{github.event.comment.body}}"
          version=`echo "$commentbody"|cut -d" " -f2`
          echo $version
          arch=`echo "$commentbody"|cut -d" " -f3`
          echo $arch
          wget http://sealer.oss-cn-beijing.aliyuncs.com/auto-build/k8sv1.20.14.tar.gz
          tar -xvf k8sv1.20.14.tar.gz
          wget https://dl.k8s.io/$version/kubernetes-server-linux-$arch.tar.gz
          tar -xvf kubernetes-server-linux-$arch.tar.gz
          sudo cp ./kubernetes/server/bin/kubectl ./rootfs/bin/
          sudo cp ./kubernetes/server/bin/kubeadm ./rootfs/bin/
          sudo cp ./kubernetes/server/bin/kubelet ./rootfs/bin/
          wget http://sealer.oss-cn-beijing.aliyuncs.com/auto-build/sealer.tar.gz
          sudo tar -xvf sealer.tar.gz -C /usr/bin
          sudo sealer login ${{secrets.PRIVATEWAREHOUSE}}
          cd ./rootfs
          sudo ./bin/kubeadm config images list >> imageList
          k8sversion=imageList |head -n 1 |cut -d ":" -f2
          ls -R
          cd ./etc/
          cat>kubeadm.yml<<EOF
          apiVersion: kubeadm.k8s.io/v1beta2
          kind: InitConfiguration
          localAPIEndpoint:
            advertiseAddress: 172.16.0.65
            bindPort: 6443
          nodeRegistration:
            criSocket: /var/run/dockershim.sock
            taints: null

          ---
          apiServer:
            certSANs:
            extraArgs:
              audit-log-format: json
              audit-log-maxage: "7"
              audit-log-maxbackup: "10"
              audit-log-maxsize: "100"
              audit-log-path: /var/log/kubernetes/audit.log
              audit-policy-file: /etc/kubernetes/audit-policy.yml
              enable-aggregator-routing: "true"
              etcd-servers: https://172.16.0.65:2379
              feature-gates: TTLAfterFinished=true,EphemeralContainers=true
            extraVolumes:
            - hostPath: /etc/kubernetes
              mountPath: /etc/kubernetes
              name: audit
              pathType: DirectoryOrCreate
            - hostPath: /var/log/kubernetes
              mountPath: /var/log/kubernetes
              name: audit-log
              pathType: DirectoryOrCreate
            - hostPath: /etc/localtime
              mountPath: /etc/localtime
              name: localtime
              pathType: File
              readOnly: true
          apiVersion: kubeadm.k8s.io/v1beta2
          controlPlaneEndpoint: apiserver.cluster.local:6443
          controllerManager:
            extraArgs:
              experimental-cluster-signing-duration: 876000h
              feature-gates: TTLAfterFinished=true,EphemeralContainers=true
            extraVolumes:
            - hostPath: /etc/localtime
              mountPath: /etc/localtime
              name: localtime
              pathType: File
              readOnly: true
          dns:
            type: ""
          etcd:
            local:
              dataDir: ""
              extraArgs:
                listen-metrics-urls: http://0.0.0.0:2381
          imageRepository: sea.hub:5000
          kind: ClusterConfiguration
          kubernetesVersion: $k8sversion
          networking:
            podSubnet: 100.64.0.0/10
            serviceSubnet: 10.96.0.0/22
          scheduler:
            extraArgs:
              feature-gates: TTLAfterFinished=true,EphemeralContainers=true
            extraVolumes:
            - hostPath: /etc/localtime
              mountPath: /etc/localtime
              name: localtime
              pathType: File
              readOnly: true
          ---
          apiVersion: kubelet.config.k8s.io/v1beta1
          authentication:
            anonymous:
              enabled: false
            webhook:
              cacheTTL: 2m0s
              enabled: true
            x509:
              clientCAFile: /etc/kubernetes/pki/ca.crt
          authorization:
            mode: Webhook
            webhook:
              cacheAuthorizedTTL: 5m0s
              cacheUnauthorizedTTL: 30s
          cgroupDriver: cgroupfs
          cgroupsPerQOS: true
          clusterDomain: cluster.local
          configMapAndSecretChangeDetectionStrategy: Watch
          containerLogMaxFiles: 5
          containerLogMaxSize: 10Mi
          contentType: application/vnd.kubernetes.protobuf
          cpuCFSQuota: true
          cpuCFSQuotaPeriod: 100ms
          cpuManagerPolicy: none
          cpuManagerReconcilePeriod: 10s
          enableControllerAttachDetach: true
          enableDebuggingHandlers: true
          enforceNodeAllocatable:
          - pods
          eventBurst: 10
          eventRecordQPS: 5
          evictionHard:
            imagefs.available: 15%
            memory.available: 100Mi
            nodefs.available: 10%
            nodefs.inodesFree: 5%
          evictionPressureTransitionPeriod: 5m0s
          failSwapOn: true
          fileCheckFrequency: 20s
          hairpinMode: promiscuous-bridge
          healthzBindAddress: 127.0.0.1
          healthzPort: 10248
          httpCheckFrequency: 20s
          imageGCHighThresholdPercent: 85
          imageGCLowThresholdPercent: 80
          imageMinimumGCAge: 2m0s
          iptablesDropBit: 15
          iptablesMasqueradeBit: 14
          kind: KubeletConfiguration
          kubeAPIBurst: 10
          kubeAPIQPS: 5
          logging: {}
          makeIPTablesUtilChains: true
          maxOpenFiles: 1000000
          maxPods: 110
          nodeLeaseDurationSeconds: 40
          nodeStatusReportFrequency: 10s
          nodeStatusUpdateFrequency: 10s
          oomScoreAdj: -999
          podPidsLimit: -1
          port: 10250
          registryBurst: 10
          registryPullQPS: 5
          rotateCertificates: true
          runtimeRequestTimeout: 2m0s
          serializeImagePulls: true
          shutdownGracePeriod: 0s
          shutdownGracePeriodCriticalPods: 0s
          staticPodPath: /etc/kubernetes/manifests
          streamingConnectionIdleTimeout: 4h0m0s
          syncFrequency: 1m0s
          volumeStatsAggPeriod: 1m0s
          ---
          apiVersion: kubeproxy.config.k8s.io/v1alpha1
          bindAddress: ""
          bindAddressHardFail: false
          clientConnection:
            acceptContentTypes: ""
            burst: 0
            contentType: ""
            kubeconfig: ""
            qps: 0
          clusterCIDR: ""
          configSyncPeriod: 0s
          conntrack:
            maxPerCore: null
            min: null
            tcpCloseWaitTimeout: null
            tcpEstablishedTimeout: null
          detectLocalMode: ""
          enableProfiling: false
          healthzBindAddress: ""
          hostnameOverride: ""
          iptables:
            masqueradeAll: false
            masqueradeBit: null
            minSyncPeriod: 0s
            syncPeriod: 0s
          ipvs:
            excludeCIDRs:
            - 10.103.97.2/32
            minSyncPeriod: 0s
            scheduler: ""
            strictARP: false
            syncPeriod: 0s
            tcpFinTimeout: 0s
            tcpTimeout: 0s
            udpTimeout: 0s
          kind: KubeProxyConfiguration
          metricsBindAddress: ""
          mode: ipvs
          nodePortAddresses: null
          oomScoreAdj: null
          portRange: ""
          showHiddenMetricsForVersion: ""
          udpIdleTimeout: 0s
          winkernel:
            enableDSR: false
            networkName: ""
            sourceVip: ""
          EOF
          cd ..
          sudo sealer build -f Kubefile -m lite -t test:0.1 .
          sudo sealer push test:0.1
      - name: Auto build image
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            kubernetes:success
